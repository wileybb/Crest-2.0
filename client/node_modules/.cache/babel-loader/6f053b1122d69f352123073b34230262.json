{"ast":null,"code":"import _defineProperty from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/swagg187/Desktop/crest group version/Crest/client/src/components/Login/login.js\";\nimport React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport { Router, Link, Redirect } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport Jumbotron from \"../Jumbotron/index\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n      var loginData = {\n        email: _this.state.email,\n        password: _this.state.password\n      };\n\n      _this.loginUser(loginData);\n    };\n\n    _this.loginUser = function (userLogin) {\n      API.loginUser(userLogin).then(function (res) {\n        var storeUser = localStorage.setItem(\"loggedIn\", \"true\"); //const storeUser = localStorage.removeItem(\"loggedIn\") do this when logout\n\n        _this.props.history.push(\"/home\"); //this.context.router.history.push('/home');\n        //Cleared console.log can add later if required\n\n      }).catch(function (err) {\n        alert(\"Email or Password is invalid\");\n        console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.email.length > 0 && this.state.password.length > 0 && this.state.username.length > 0;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"email\",\n        onChange: this.handleInputChange,\n        value: this.state.email,\n        name: \"email\",\n        placeholder: \"abc@abc.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.handleInputChange,\n        placeholder: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), React.createElement(\"a\", {\n        href: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-lg btn-info\",\n        disabled: !this.validateForm,\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Login\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Open an account? \", React.createElement(Link, {\n        to: '/signup',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"SignUp\"))));\n    } //Render End\n\n  }]);\n\n  return Login;\n}(Component);\n\nLogin.contextTypes = {\n  router: PropTypes.object\n};\nexport { Login as default };","map":{"version":3,"sources":["/Users/swagg187/Desktop/crest group version/Crest/client/src/components/Login/login.js"],"names":["React","Component","API","Router","Link","Redirect","PropTypes","Jumbotron","Login","state","email","password","handleInputChange","event","target","name","value","setState","handleFormSubmit","preventDefault","loginData","loginUser","userLogin","then","res","storeUser","localStorage","setItem","props","history","push","catch","err","alert","console","log","length","username","validateForm","contextTypes","router","object"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../../utils/API\"\nimport { Router, Link, Redirect } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport Jumbotron from \"../Jumbotron/index\";\n\n\n\nexport default class Login extends Component {\n    state = {\n        email: \"\",\n        password: \"\"\n    }\n    static contextTypes = {\n        router: PropTypes.object\n    };\n    handleInputChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const loginData = {\n            email: this.state.email,\n            password: this.state.password\n        }\n        this.loginUser(loginData);\n    }\n    validateForm() {\n        return this.state.email.length > 0 && this.state.password.length > 0 && this.state.username.length > 0;\n    }\n    loginUser = (userLogin) => {\n        API.loginUser(userLogin)\n      .then((res) => {\n        const storeUser = localStorage.setItem(\"loggedIn\",\"true\");\n        //const storeUser = localStorage.removeItem(\"loggedIn\") do this when logout\n        this.props.history.push(\"/home\");\n        //this.context.router.history.push('/home');\n        //Cleared console.log can add later if required\n        })\n      .catch(err => {\n          alert(\"Email or Password is invalid\");\n          console.log(err);});\n    }\n\n    render() {\n        return (<div className=\"container\">\n            <Jumbotron />\n            <form className=\"form\">\n                <div className=\"form-group\">\n                    {/* <label htmlFor=\"email\">Email:</label> */}\n                    <input type=\"email\"\n                        onChange={this.handleInputChange}\n                        value={this.state.email}\n                        name=\"email\"\n                        placeholder=\"abc@abc.com\" />\n                </div>\n                <div className=\"form-group\">\n                    {/* <label htmlFor=\"password\">Password:</label> */}\n                    <input type=\"password\"\n                        name=\"password\" value={this.state.password}\n                        onChange={this.handleInputChange}\n                        placeholder=\"password\"\n                    />\n                </div>\n                <a href=\"/home\"><button className=\"btn btn-lg btn-info\" disabled={!this.validateForm} onClick={this.handleFormSubmit}>Login</button></a>\n                <hr />\n                <p>Open an account? <Link to={'/signup'}>SignUp</Link></p>\n            </form>\n\n        </div>)\n    }  //Render End\n\n}"]},"metadata":{},"sourceType":"module"}