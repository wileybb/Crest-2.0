{"ast":null,"code":"import _defineProperty from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/swagg187/Desktop/crest group version/Crest/client/src/components/Allocation/Allocation.js\";\nimport React from 'react';\nimport { MDBContainer, MDBMask, MDBView, MDBBtn, MDBCol, MDBRow, MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBIcon, MDBInput, MDBTable, MDBTableHead, MDBTableBody } from 'mdbreact';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport API from '../../utils/API';\nimport Navbar from \"../Navbar/Navbar\";\nimport QuickPortfolio from \"../Portfolio/QuickPortfolio\";\nimport HomeCopy from \"./HomeCopy\";\nimport StaticAreaChart from \"../Charts/StaticAreaChart.js\";\nimport Footer from \"../Footer/Footer\";\nimport CashFormat from \"../CashCheck/CashFormat\";\nimport Modal from \"../Modals/Modals.js\";\n\nvar Allocation =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Allocation, _React$Component);\n\n  function Allocation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Allocation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Allocation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      stockResponse: {},\n      symbol: \"\",\n      quantity: null,\n      stockPrice: null,\n      stock: [\"googl\", \"fb\"],\n      watchList: {},\n      watchListsymbol: \"\",\n      oneStockResponse: {},\n      responseLiveStock: [],\n      endpoint: \"https://ws-api.iextrading.com/1.0/tops\",\n      show: false,\n      modalMessage: \"\",\n      buttonDisabled: true\n    };\n\n    _this.getPertucularUserWatchList = function () {\n      API.getPertucularUserWatchList().then(function (res) {\n        _this.setState({\n          watchList: res.data\n        });\n      });\n    };\n\n    _this.handleWatchListInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleWatchListFormSubmit = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        watchListsymbol: _this.state.watchListsymbol\n      });\n\n      var data = {\n        id: _this.state.watchList.UserId,\n        stockSymbols: _this.state.watchList.stock + \",\" + _this.state.watchListsymbol.toLowerCase()\n      };\n\n      _this.updateWatchList(data);\n    };\n\n    _this.updateWatchList = function (stockTicker) {\n      API.updatePertucularUserWatchList(stockTicker).then(function (res) {\n        console.log(res);\n\n        _this.getPertucularUserWatchList();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.autoStockData = function () {\n      //console.log(this.state.watchList.stock);\n      //let symbols = this.state.stock.join(\",\") \n      API.batchStock(_this.state.watchList.stock).then(function (res) {\n        _this.setState({\n          stockResponse: res.data\n        });\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target2 = event.target,\n          name = _event$target2.name,\n          value = _event$target2.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        symbol: _this.state.symbol\n      });\n\n      _this.stockSymbol(_this.state.symbol);\n    };\n\n    _this.handleBuySubmit = function (event) {\n      // event.preventDefault();\n      if (!_this.state.quantity && !_this.state.symbol && !_this.state.stockPrice) {\n        _this.setState({\n          modalMessage: \"Please correct your input\"\n        });\n\n        _this.toggleModal();\n      } else {\n        var purchaseData = {\n          buy: true,\n          quantity: _this.state.quantity,\n          symbol: _this.state.symbol,\n          purchasePrice: parseFloat(_this.state.stockPrice).toFixed(2),\n          purchaseTotal: parseFloat(_this.state.stockPrice * _this.state.quantity).toFixed(2)\n        };\n\n        _this.addBuy(purchaseData); //alert(`Transaction successful! \\n ${this.state.quantity} of ${this.state.oneStockResponse.data.quote.symbol.toUpperCase()} purchased at $${purchaseData.purchasePrice} per share, for $${purchaseData.purchaseTotal} total.`);\n        //window.location.reload();\n\n\n        _this.setState({\n          modalMessage: \"Transaction successful! \\n \".concat(_this.state.quantity, \" share(s) of \").concat(_this.state.oneStockResponse.data.quote.symbol.toUpperCase(), \" purchased at $\").concat(purchaseData.purchasePrice, \" per share, for a total of $\").concat(purchaseData.purchaseTotal, \".\")\n        });\n      }\n    };\n\n    _this.addBuy = function (userBuy) {\n      API.createPurchase(userBuy).then(function (res) {\n        console.log(res);\n\n        _this.setState({\n          symbol: \"\"\n        });\n\n        _this.setState({\n          quantity: \"\"\n        });\n\n        _this.setState({\n          show: true\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleSellSubmit = function (event) {\n      // event.preventDefault();\n      if (!_this.state.quantity && !_this.state.symbol && !_this.state.stockPrice) {\n        _this.setState({\n          modalMessage: \"Please correct your input\"\n        });\n\n        _this.toggleModal();\n      } else {\n        var sellData = {\n          buy: false,\n          quantity: _this.state.quantity,\n          symbol: _this.state.symbol,\n          purchasePrice: parseFloat(_this.state.stockPrice).toFixed(2),\n          purchaseTotal: parseFloat(_this.state.stockPrice * _this.state.quantity).toFixed(2)\n        };\n        console.log(sellData);\n\n        _this.addSale(sellData); //alert(`Transaction successful! \\n ${this.state.quantity} of ${this.state.oneStockResponse.data.quote.symbol.toUpperCase()} sold at $${sellData.purchasePrice} per share, for $${sellData.purchaseTotal} total.`);\n        //window.location.reload();\n\n\n        _this.setState({\n          modalMessage: \"Transaction successful! \\n \".concat(_this.state.quantity, \" share(s) of \").concat(_this.state.oneStockResponse.data.quote.symbol.toUpperCase(), \" sold at $\").concat(sellData.purchasePrice, \" per share, for a total of $\").concat(sellData.purchaseTotal, \".\")\n        });\n      }\n    };\n\n    _this.addSale = function (userSell) {\n      API.createPurchase(userSell).then(function (res) {\n        console.log(res);\n\n        _this.setState({\n          symbol: \"\"\n        });\n\n        _this.setState({\n          quantity: \"\"\n        });\n\n        _this.setState({\n          show: true\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.checkCash = function () {\n      API.getCashValue().then(function (res) {\n        return res;\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.stockSymbol = function (symbol) {\n      API.singleStock(symbol).then(function (res) {\n        _this.setState({\n          stockPrice: res.data.quote.latestPrice\n        }); //this.props.history.replace('/home');  \n\n\n        _this.setState({\n          oneStockResponse: res\n        }); //console.log(this.state.oneStockResponse)\n\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.toggleModal = function () {\n      _this.setState({\n        show: !_this.state.show\n      });\n\n      window.location.reload();\n    };\n\n    return _this;\n  }\n\n  _createClass(Allocation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getPertucularUserWatchList();\n      this.intervalId = setInterval(this.autoStockData.bind(this), 1000);\n    } //Clear interval when logging out or move to portfolio page or other page\n\n  }, {\n    key: \"intervalClear\",\n    value: function intervalClear() {\n      clearInterval(this.intervalId);\n    } //Get perticular user stock from database table stock\n\n  }, {\n    key: \"validateForm\",\n    //Form Validataion to check if symbol is entered or not \n    value: function validateForm() {\n      return this.state.symbol.length > 0;\n    } //Get info on one stock symbol\n\n  }, {\n    key: \"refreshPage\",\n    value: function refreshPage() {\n      window.location.reload();\n    } //Modal Toggle\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(MDBView, {\n        src: \"https://images.unsplash.com/photo-1460620105278-b7f0516e6d65?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(MDBMask, {\n        overlay: \"black-light\",\n        className: \"flex-center flex-column text-center align-middle mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        className: \"flex-center text-white mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Crest Trading Portal\")), React.createElement(MDBContainer, {\n        className: \"flex-center flex-column\",\n        style: {\n          marginTop: -50,\n          height: 2500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        className: \"transparent-background\",\n        style: {\n          backgroundColor: 'rgba(0, 0, 0, 0.5)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(MDBCardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(MDBCardTitle, {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), React.createElement(MDBCardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(MDBCardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(MDBCardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Remaining Balance:\"), \" \", React.createElement(CashFormat, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      })), React.createElement(MDBCardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"form-inline mt-4 mb-4 ml-5\",\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleInputChange,\n        value: this.state.symbol,\n        name: \"symbol\",\n        placeholder: \"Search by Stock Symbol\",\n        className: \"form-control form-control-sm ml-3 w-75\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(MDBBtn, {\n        size: \"sm\",\n        color: \"elegant\",\n        disabled: !this.validateForm,\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Search\"))), React.createElement(MDBContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, Object.keys(this.state.oneStockResponse).length === 0 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Results will appear here.\") : React.createElement(MDBTable, {\n        className: \"table col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(MDBTableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"Stock Symbol\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Current\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"Change\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Change %\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"High\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Low\"))), React.createElement(MDBTableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, this.state.oneStockResponse.data.quote.symbol), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, this.state.oneStockResponse.data.quote.close), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, this.state.oneStockResponse.data.quote.latestPrice), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, this.state.oneStockResponse.data.quote.change), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, this.state.oneStockResponse.data.quote.changePercent), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, this.state.oneStockResponse.data.quote.high), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, this.state.oneStockResponse.data.quote.low)))), React.createElement(MDBContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, Object.keys(this.state.oneStockResponse).length === 0 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }) : React.createElement(StaticAreaChart, {\n        data: this.state.oneStockResponse.data,\n        width: \"75%\",\n        height: \"200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }))), React.createElement(MDBBtn, {\n        color: \"elegant\",\n        href: \"#\",\n        className: \"float-right\",\n        style: {\n          marginTop: 20\n        },\n        onClick: this.handleSellSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"Sell\"), React.createElement(MDBBtn, {\n        color: \"elegant\",\n        href: \"#\",\n        className: \"float-right\",\n        style: {\n          marginTop: 20\n        },\n        onClick: this.handleBuySubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Buy\"), React.createElement(\"div\", {\n        className: \"float-right\",\n        style: {\n          width: 75\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(MDBInput, (_React$createElement = {\n        name: \"quantity\",\n        label: \"Quantity\",\n        onChange: this.handleInputChange,\n        value: this.state.quantity\n      }, _defineProperty(_React$createElement, \"name\", \"quantity\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)))))), React.createElement(MDBCol, {\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(MDBCardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(MDBCardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Current Portfolio\")), React.createElement(MDBCardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(MDBContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(QuickPortfolio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }))))), React.createElement(MDBBtn, {\n        className: \"mt-3\",\n        outline: true,\n        color: \"white\",\n        href: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"Return to Home\")))))))))), React.createElement(Modal, {\n        show: this.state.show,\n        toggleModal: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, this.state.modalMessage), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Allocation;\n}(React.Component);\n\nexport default Allocation;","map":{"version":3,"sources":["/Users/swagg187/Desktop/crest group version/Crest/client/src/components/Allocation/Allocation.js"],"names":["React","MDBContainer","MDBMask","MDBView","MDBBtn","MDBCol","MDBRow","MDBCard","MDBCardBody","MDBCardTitle","MDBCardText","MDBIcon","MDBInput","MDBTable","MDBTableHead","MDBTableBody","BrowserRouter","Router","Link","API","Navbar","QuickPortfolio","HomeCopy","StaticAreaChart","Footer","CashFormat","Modal","Allocation","state","stockResponse","symbol","quantity","stockPrice","stock","watchList","watchListsymbol","oneStockResponse","responseLiveStock","endpoint","show","modalMessage","buttonDisabled","getPertucularUserWatchList","then","res","setState","data","handleWatchListInputChange","event","target","name","value","handleWatchListFormSubmit","preventDefault","id","UserId","stockSymbols","toLowerCase","updateWatchList","stockTicker","updatePertucularUserWatchList","console","log","catch","err","autoStockData","batchStock","handleInputChange","handleFormSubmit","stockSymbol","handleBuySubmit","toggleModal","purchaseData","buy","purchasePrice","parseFloat","toFixed","purchaseTotal","addBuy","quote","toUpperCase","userBuy","createPurchase","handleSellSubmit","sellData","addSale","userSell","checkCash","getCashValue","singleStock","latestPrice","window","location","reload","intervalId","setInterval","bind","clearInterval","length","marginTop","height","backgroundColor","validateForm","Object","keys","close","change","changePercent","high","low","width","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { MDBContainer, MDBMask, MDBView, MDBBtn, MDBCol, MDBRow, MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBIcon, MDBInput, MDBTable, MDBTableHead, MDBTableBody } from 'mdbreact';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport API from '../../utils/API';\n\nimport Navbar from \"../Navbar/Navbar\";\nimport QuickPortfolio from \"../Portfolio/QuickPortfolio\";\nimport HomeCopy from \"./HomeCopy\";\nimport StaticAreaChart from \"../Charts/StaticAreaChart.js\";\nimport Footer from \"../Footer/Footer\";\nimport CashFormat from \"../CashCheck/CashFormat\";\nimport Modal from \"../Modals/Modals.js\";\n\n\nclass Allocation extends React.Component {\n\n  state = {\n    stockResponse: {},\n    symbol:\"\",\n    quantity:null,\n    stockPrice:null,\n    stock: [\"googl\", \"fb\"],\n    watchList: {},\n    watchListsymbol: \"\",\n    oneStockResponse: {},\n    responseLiveStock: [],\n    endpoint: \"https://ws-api.iextrading.com/1.0/tops\",\n    show:false,\n    modalMessage: \"\",\n    buttonDisabled: true\n  }\n\n  componentDidMount() {\n      this.getPertucularUserWatchList();\n      this.intervalId = setInterval(this.autoStockData.bind(this), 1000);\n  }\n\n  //Clear interval when logging out or move to portfolio page or other page\n  intervalClear() {\n      clearInterval(this.intervalId);\n  }\n\n  //Get perticular user stock from database table stock\n  getPertucularUserWatchList = () => {\n      API.getPertucularUserWatchList().then((res) => {\n          this.setState({ watchList: res.data });\n      });\n  }\n\n  //Watch list input update in state\n  handleWatchListInputChange = (event) => {\n      const { name, value } = event.target;\n      this.setState({ [name]: value });\n  }\n  //Watch list submit button \n  handleWatchListFormSubmit = (event) => {\n      event.preventDefault();\n      this.setState({ watchListsymbol: this.state.watchListsymbol });\n      const data = {\n          id: this.state.watchList.UserId,\n          stockSymbols: this.state.watchList.stock + \",\" + this.state.watchListsymbol.toLowerCase()\n      }\n      this.updateWatchList(data);\n  }\n  updateWatchList = (stockTicker) => {\n      API.updatePertucularUserWatchList(stockTicker)\n          .then(res => {\n              console.log(res);\n              this.getPertucularUserWatchList();\n          })\n          .catch(err => console.log(err))\n  }\n\n  //Get Real time stock prices based on stocks in state stocks\n  autoStockData = () => {\n      //console.log(this.state.watchList.stock);\n      //let symbols = this.state.stock.join(\",\") \n      API.batchStock(this.state.watchList.stock).then((res) => {\n          this.setState({ stockResponse: res.data });\n      })\n  }\n\n  //Input value updated in state\n  handleInputChange = (event) => {\n      const { name, value } = event.target;\n      this.setState({ [name]: value });\n  }\n\n  //Form Value submission to get once stock price \n  handleFormSubmit = (event) => {\n      event.preventDefault();\n      this.setState({ symbol: this.state.symbol });\n      this.stockSymbol(this.state.symbol);\n  }\n\n  handleBuySubmit = (event) => {\n      // event.preventDefault();\n      if(!this.state.quantity && !this.state.symbol && !this.state.stockPrice){\n        this.setState({modalMessage: \"Please correct your input\"});\n        this.toggleModal();\n      } else {\n      const purchaseData = {\n          buy: true,\n          quantity: this.state.quantity,\n          symbol: this.state.symbol,\n          purchasePrice: parseFloat(this.state.stockPrice).toFixed(2),\n          purchaseTotal: parseFloat(this.state.stockPrice * this.state.quantity).toFixed(2)\n      };\n      this.addBuy(purchaseData);\n      //alert(`Transaction successful! \\n ${this.state.quantity} of ${this.state.oneStockResponse.data.quote.symbol.toUpperCase()} purchased at $${purchaseData.purchasePrice} per share, for $${purchaseData.purchaseTotal} total.`);\n      //window.location.reload();\n      this.setState({modalMessage: `Transaction successful! \\n ${this.state.quantity} share(s) of ${this.state.oneStockResponse.data.quote.symbol.toUpperCase()} purchased at $${purchaseData.purchasePrice} per share, for a total of $${purchaseData.purchaseTotal}.`})\n    }\n  }\n\n  //Handle Buy stock\n  addBuy = (userBuy) => {\n      API.createPurchase(userBuy)\n          .then(res => { \n            console.log(res);\n            this.setState({symbol:\"\"});\n            this.setState({quantity:\"\"});\n            this.setState({show:true});\n          })\n          .catch(err => console.log(err))\n  }\n\n\n  handleSellSubmit = (event) => {\n      // event.preventDefault();\n      if(!this.state.quantity && !this.state.symbol && !this.state.stockPrice){\n        this.setState({modalMessage: \"Please correct your input\"});\n        this.toggleModal();\n      } else {\n        const sellData = {\n          buy: false,\n          quantity: this.state.quantity,\n          symbol: this.state.symbol,\n          purchasePrice: parseFloat(this.state.stockPrice).toFixed(2),\n          purchaseTotal: parseFloat(this.state.stockPrice * this.state.quantity).toFixed(2)\n      }\n      console.log(sellData);\n      this.addSale(sellData);\n      //alert(`Transaction successful! \\n ${this.state.quantity} of ${this.state.oneStockResponse.data.quote.symbol.toUpperCase()} sold at $${sellData.purchasePrice} per share, for $${sellData.purchaseTotal} total.`);\n      //window.location.reload();\n      this.setState({modalMessage: `Transaction successful! \\n ${this.state.quantity} share(s) of ${this.state.oneStockResponse.data.quote.symbol.toUpperCase()} sold at $${sellData.purchasePrice} per share, for a total of $${sellData.purchaseTotal}.`});\n      }\n    }\n\n  //Sell a stock\n  addSale = (userSell) => {\n      API.createPurchase(userSell)\n          .then(res => { \n            console.log(res);\n            this.setState({symbol:\"\"});\n            this.setState({quantity:\"\"});\n            this.setState({show:true});  \n          })\n          .catch(err => console.log(err))\n  }\n\n  //Check the cash value \n  checkCash = () => {\n      API.getCashValue()\n          .then(res => {\n              return (res);\n          })\n          .catch(err => console.log(err))\n  }\n\n  //Form Validataion to check if symbol is entered or not \n  validateForm() {\n      return this.state.symbol.length > 0;\n  }\n\n  //Get info on one stock symbol\n  stockSymbol = (symbol) => {\n      API.singleStock(symbol)\n          .then((res) => {\n              this.setState({stockPrice:res.data.quote.latestPrice})\n              //this.props.history.replace('/home');  \n              this.setState({ oneStockResponse: res });\n              //console.log(this.state.oneStockResponse)\n          })\n          .catch(err => console.log(err));\n  }\n\n  refreshPage(){\n    window.location.reload();\n  } \n\n\n  //Modal Toggle\n  toggleModal = () => {\n    this.setState({\n    show: !this.state.show\n    });\n    window.location.reload();\n };\n\n  render() {\n\n    return (\n      <div>\n        {/* <Navbar /> */}\n        <MDBView src=\"https://images.unsplash.com/photo-1460620105278-b7f0516e6d65?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\">\n          <MDBMask overlay=\"black-light\" className=\"flex-center flex-column text-center align-middle mx-auto\">\n\n            <MDBRow className=\"flex-center text-white mt-3\">\n              <h1>Crest Trading Portal</h1> \n            </MDBRow>\n\n            <MDBContainer className=\"flex-center flex-column\" style={{ marginTop: -50, height: 2500 }}>\n              {/* <MDBRow className=\"flex-center flex-column\" style={{ marginTop: -100, height: 2500 }}> */}\n                <MDBCol md=\"12\">\n                  <MDBCard className=\"transparent-background\" style={{ backgroundColor: 'rgba(0, 0, 0, 0.5)' }}>\n                    <MDBCardBody>\n                      <MDBCardTitle className=\"text-white\">\n                        {/* <strong>Initialize Fund Allocation</strong> */}\n                      </MDBCardTitle>\n                      <MDBCardText>\n                        <MDBRow center>\n                          <MDBCol md=\"8\">\n                            <MDBCard className=\"mb-3\">\n                              <MDBCardBody>\n                                <MDBCardTitle><strong>Remaining Balance:</strong> <CashFormat /></MDBCardTitle>\n                                <MDBCardText>\n                                  <form className=\"form-inline mt-4 mb-4 ml-5\" onSubmit={this.handleFormSubmit}>\n                                    <MDBIcon icon=\"search\" />\n                                    <input type=\"text\"\n                                      onChange={this.handleInputChange}\n                                      value={this.state.symbol}\n                                      name=\"symbol\"\n                                      placeholder=\"Search by Stock Symbol\"\n                                      className=\"form-control form-control-sm ml-3 w-75\"  />\n                                    <MDBBtn size=\"sm\" color=\"elegant\" disabled={!this.validateForm} onClick={this.handleFormSubmit}>Search</MDBBtn>\n                                  </form>\n                                </MDBCardText>\n                                <MDBContainer>\n                                    {Object.keys(this.state.oneStockResponse).length === 0 ? (<div>Results will appear here.</div>) : (\n                                      <MDBTable className=\"table col-lg-12\">\n                                        <MDBTableHead>\n                                          <tr>\n                                            <th>Stock Symbol</th>\n                                            <th>Close</th>\n                                            <th>Current</th>\n                                            <th>Change</th>\n                                            <th>Change %</th>\n                                            <th>High</th>\n                                            <th>Low</th>\n                                            {/* <th>52 Week High</th>\n                                            <th>52 Week Low</th> */}\n                                          </tr>\n                                        </MDBTableHead>\n                                        <MDBTableBody>\n                                          <tr>\n                                            <td>{this.state.oneStockResponse.data.quote.symbol}</td>\n                                            <td>{this.state.oneStockResponse.data.quote.close}</td>\n                                            <td>{this.state.oneStockResponse.data.quote.latestPrice}</td>\n                                            <td>{this.state.oneStockResponse.data.quote.change}</td>\n                                            <td>{this.state.oneStockResponse.data.quote.changePercent}</td>\n                                            <td>{this.state.oneStockResponse.data.quote.high}</td>\n                                            <td>{this.state.oneStockResponse.data.quote.low}</td>\n                                            {/* <td>{this.state.oneStockResponse.data.quote.week52High}</td>\n                                            <td>{this.state.oneStockResponse.data.quote.week52Low}</td> */}\n                                          </tr>\n                                        </MDBTableBody>\n                                      </MDBTable>\n                                    )}\n                                  <MDBContainer>\n                                      {Object.keys(this.state.oneStockResponse).length === 0 ?\n                                          <div /> :\n                                          <StaticAreaChart data={this.state.oneStockResponse.data} width=\"75%\" height=\"200\" />\n                                      }\n                                  </MDBContainer>\n                                </MDBContainer>\n                                  <MDBBtn color=\"elegant\" href=\"#\" className=\"float-right\" style={{ marginTop: 20 }} onClick={this.handleSellSubmit}>Sell</MDBBtn>\n                                  <MDBBtn color=\"elegant\" href=\"#\" className=\"float-right\" style={{ marginTop: 20 }} onClick={this.handleBuySubmit}>Buy</MDBBtn>\n                                <div className=\"float-right\" style={{ width: 75 }}>\n                                  <MDBInput name=\"quantity\" label=\"Quantity\" \n                                    onChange={this.handleInputChange}\n                                    value={this.state.quantity}\n                                    name=\"quantity\" />\n                                </div>\n                              </MDBCardBody>\n                            </MDBCard>\n                          </MDBCol>\n                          <MDBCol md=\"4\">\n                            <MDBCard>\n                              <MDBCardBody>\n                                <MDBCardTitle><strong>Current Portfolio</strong></MDBCardTitle>\n                                <MDBCardText>\n                                  <MDBContainer>\n                                    <QuickPortfolio />\n                                  </MDBContainer>\n                                </MDBCardText>\n                              </MDBCardBody>\n                            </MDBCard>\n                            <MDBBtn className=\"mt-3\" outline color=\"white\" href=\"/home\">Return to Home</MDBBtn>\n                          </MDBCol>                 \n                        </MDBRow>\n                      </MDBCardText>\n                    </MDBCardBody>\n                  </MDBCard>\n                </MDBCol>  \n              {/* </MDBRow> */}\n            </MDBContainer>\n          </MDBMask>\n        </MDBView>\n        <Modal show={this.state.show} toggleModal={this.toggleModal}>{this.state.modalMessage}</Modal>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default Allocation;"]},"metadata":{},"sourceType":"module"}