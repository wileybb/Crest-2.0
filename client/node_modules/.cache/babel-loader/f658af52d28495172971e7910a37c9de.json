{"ast":null,"code":"import _classCallCheck from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/swagg187/Desktop/crest group version/Crest/client/src/components/Portfolio/PortfolioTransactions.js\";\nimport React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\nimport 'jspdf-autotable';\n\nvar PortfolioTransactions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PortfolioTransactions, _Component);\n\n  function PortfolioTransactions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PortfolioTransactions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PortfolioTransactions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      watchList: {},\n      transactions: []\n    };\n\n    _this.getUserTransaction = function () {\n      API.getUserTransactionData(_this.state.watchList.UserId).then(function (res) {\n        console.log(\"front transaction route hit\");\n\n        _this.setState({\n          transactions: res.data\n        });\n\n        console.log(_this.state.transactions);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PortfolioTransactions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      API.getPertucularUserWatchList().then(function (res) {\n        console.log(res.data);\n\n        _this2.setState({\n          watchList: res.data\n        });\n\n        console.log(_this2.state.watchList);\n      }).then(function () {\n        console.log(\"dot then function ran in transaction\");\n\n        _this2.getUserTransaction();\n      });\n    } //API AJAX Call to user transaction table\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        id: \"mytable\",\n        className: \"table table-striped\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"table-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Stock\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Quantity\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Type\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Purchase Price\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Purchase Total\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Purchase Date\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.state.transactions.map(function (data) {\n        var priceFormat = new Intl.NumberFormat('en-US', {\n          style: 'currency',\n          currency: 'USD'\n        }).format(data.purchasePrice);\n        var totalFormat = new Intl.NumberFormat('en-US', {\n          style: 'currency',\n          currency: 'USD'\n        }).format(data.purchaseTotal);\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, data.symbol.toUpperCase())), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, data.quantity), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, data.buy ? \"Buy\" : \"Sell\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, priceFormat), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, totalFormat), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, data.updatedAt.slice(0, data.updatedAt.length - 5).replace(/T/g, \" \")));\n      }))));\n    } //Return and Render-Method End\n\n  }]);\n\n  return PortfolioTransactions;\n}(Component); //Portfolio Class end \n\n\nexport { PortfolioTransactions as default };","map":{"version":3,"sources":["/Users/swagg187/Desktop/crest group version/Crest/client/src/components/Portfolio/PortfolioTransactions.js"],"names":["React","Component","API","jsPDF","html2canvas","PortfolioTransactions","state","watchList","transactions","getUserTransaction","getUserTransactionData","UserId","then","res","console","log","setState","data","getPertucularUserWatchList","map","priceFormat","Intl","NumberFormat","style","currency","format","purchasePrice","totalFormat","purchaseTotal","symbol","toUpperCase","quantity","buy","updatedAt","slice","length","replace"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\nimport 'jspdf-autotable';\n\nexport default class PortfolioTransactions extends Component {\n    state = {\n        watchList:{},\n        transactions:[]\n    }\n\n   componentDidMount(){\n       API.getPertucularUserWatchList().then((res) => {\n           console.log(res.data);\n           this.setState({watchList:res.data});\n           console.log(this.state.watchList);\n       }).then(() => {\n        console.log(\"dot then function ran in transaction\");\n        this.getUserTransaction();\n       });\n   }\n\n   //API AJAX Call to user transaction table\n   getUserTransaction = () => {\n        API.getUserTransactionData(this.state.watchList.UserId).then((res)=> {\n            console.log(\"front transaction route hit\");\n            this.setState({transactions:res.data})\n            console.log(this.state.transactions);\n        })\n   }\n\n\n    render() {\n        return (\n            <div>\n                <table id=\"mytable\" className=\"table table-striped\">\n                <thead className=\"table-dark\">\n                    <tr>\n                        <th scope=\"col\">Stock</th>\n                        <th scope=\"col\">Quantity</th>\n                        <th scope=\"col\">Type</th>\n                        <th scope=\"col\">Purchase Price</th>\n                        <th scope=\"col\">Purchase Total</th>\n                        <th scope=\"col\">Purchase Date</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.state.transactions.map((data) => {\n                        var priceFormat = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(data.purchasePrice);\n                        var totalFormat = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(data.purchaseTotal);\n                        return (\n                            <tr>\n                            <td><b>{data.symbol.toUpperCase()}</b></td>\n                            <td>{data.quantity}</td>\n                            <td>{(data.buy) ? (\"Buy\") : (\"Sell\")}</td>\n                            <td>{priceFormat}</td>\n                            <td>{totalFormat}</td>\n                            <td>{data.updatedAt.slice(0, data.updatedAt.length-5).replace(/T/g, \" \")}</td>\n                            </tr>)\n                    })}\n                </tbody>\n                </table>\n           </div>\n        )\n    }   //Return and Render-Method End\n} //Portfolio Class end "]},"metadata":{},"sourceType":"module"}