{"ast":null,"code":"import _classCallCheck from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/swagg187/Desktop/crest group version/Crest/client/src/components/Navbar/Navbar.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBTooltip, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon } from \"mdbreact\";\nimport API from \"../../utils/API\";\n\nvar Navbar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Navbar, _Component);\n\n  function Navbar(props) {\n    var _this;\n\n    _classCallCheck(this, Navbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Navbar).call(this, props));\n\n    _this.logoutUser = function () {\n      //this.intervalClear();\n      localStorage.removeItem(\"loggedIn\");\n      API.signOutUser().then(function (res) {\n        console.log(res);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.goToHomePage = function () {\n      _this.props.history.push(\"/home\");\n    };\n\n    _this.state = {\n      collapse: false,\n      isWideEnough: false\n    };\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Navbar, [{\n    key: \"onClick\",\n    value: function onClick() {\n      this.setState({\n        collapse: !this.state.collapse\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isLoggedIn = localStorage.getItem(\"loggedIn\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(MDBNavbar, {\n        color: \"bg-dark\",\n        fixed: \"top\",\n        dark: true,\n        expand: \"md\",\n        scrolling: true,\n        transparent: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(MDBNavbarBrand, {\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        className: \"text-uppercase\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Crest\")), !this.state.isWideEnough && React.createElement(MDBNavbarToggler, {\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(MDBCollapse, {\n        isOpen: this.state.collapse,\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(MDBNavbarNav, {\n        right: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(MDBNavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(MDBNavLink, {\n        to: \"/home\",\n        className: \"text-uppercase\",\n        onClick: this.goToHomePage.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Home\")), React.createElement(MDBNavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, isLoggedIn ? React.createElement(MDBNavLink, {\n        to: \"/login\",\n        className: \"text-uppercase\",\n        onClick: this.logoutUser.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Log Out\") : null))))));\n    }\n  }]);\n\n  return Navbar;\n}(Component);\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/swagg187/Desktop/crest group version/Crest/client/src/components/Navbar/Navbar.js"],"names":["React","Component","BrowserRouter","Router","MDBNavbar","MDBNavbarBrand","MDBNavbarNav","MDBNavItem","MDBNavLink","MDBNavbarToggler","MDBCollapse","MDBTooltip","MDBDropdown","MDBDropdownToggle","MDBDropdownMenu","MDBDropdownItem","MDBIcon","API","Navbar","props","logoutUser","localStorage","removeItem","signOutUser","then","res","console","log","catch","err","goToHomePage","history","push","state","collapse","isWideEnough","onClick","bind","setState","isLoggedIn","getItem"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBTooltip, MDBDropdown,\nMDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon } from \"mdbreact\";\nimport API from \"../../utils/API\"\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false,\n      isWideEnough: false,\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState({\n      collapse: !this.state.collapse,\n    });\n  }\n  logoutUser = () => {\n      //this.intervalClear();\n      localStorage.removeItem(\"loggedIn\");\n      API.signOutUser().then((res) => {\n          console.log(res);\n      }).catch(err => console.log(err));\n  }\n    //Go to Home page\n  goToHomePage = () => {\n    this.props.history.push(\"/home\");\n  }\n\n  render() {\n    const isLoggedIn = localStorage.getItem(\"loggedIn\");\n    return (\n      <div>\n        <header>\n            <MDBNavbar color=\"bg-dark\" fixed=\"top\" dark expand=\"md\" scrolling transparent>\n              <MDBNavbarBrand href=\"/\">\n                <strong className=\"text-uppercase\">Crest</strong>\n              </MDBNavbarBrand>\n              {!this.state.isWideEnough && <MDBNavbarToggler onClick={this.onClick} />}\n              <MDBCollapse isOpen={this.state.collapse} navbar>\n                <MDBNavbarNav right>\n                  <MDBNavItem>\n                    <MDBNavLink to=\"/home\" className=\"text-uppercase\" onClick={this.goToHomePage.bind(this)}>Home</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    {isLoggedIn ? (<MDBNavLink  to=\"/login\" className=\"text-uppercase\" onClick={this.logoutUser.bind(this)}>Log Out</MDBNavLink>): null}\n                  </MDBNavItem>\n                </MDBNavbarNav>\n              </MDBCollapse>\n            </MDBNavbar>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}