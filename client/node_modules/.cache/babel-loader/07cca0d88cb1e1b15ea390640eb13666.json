{"ast":null,"code":"import _classCallCheck from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/swagg187/Desktop/crest group version/Crest/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/swagg187/Desktop/crest group version/Crest/client/src/components/Portfolio/QuickPortfolio.js\";\nimport React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport { Link, Router } from \"react-router-dom\";\nimport Jumbotron from \"../Jumbotron/index\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\nimport 'jspdf-autotable';\n\nvar QuickPortfolio =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuickPortfolio, _Component);\n\n  function QuickPortfolio() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, QuickPortfolio);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(QuickPortfolio)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      watchList: {},\n      portfolio: [],\n      updatePortfolio: [],\n      userPortfolio: [],\n      totalValue: 0\n    };\n\n    _this.getUserPortfolio = function () {\n      API.getUserPortfolioData(_this.state.watchList.UserId).then(function (res) {\n        console.log(res.data); //this.setState({portfolio: res.data})\n\n        _this.setState({\n          updatePortfolio: res.data\n        });\n\n        var updatePort = res.data;\n        var updateWatchList = [];\n\n        _this.state.updatePortfolio.forEach(function (el) {\n          updateWatchList.push(el.symbol); //return updateWatchList\n        }); //const userWatchlist = this.state.updatePortfolio[this.state.updatePortfolio.length-1].symbols.join(\",\");\n        //console.log(updateWatchlist.join(\",\"));\n\n\n        API.batchStock(updateWatchList).then(function (res) {\n          //console.log(this.state.updatePortfolio);\n          //   console.log(res.data);\n          for (var k in res.data) {\n            //        console.log(k, res.data[k].quote.latestPrice);\n            for (var i = 0; i < updatePort.length; i++) {\n              if (k.toLowerCase() === updatePort[i].symbol) {\n                updatePort[i][\"latestPriceIEX\"] = res.data[k].quote.latestPrice;\n              }\n            }\n          } //   console.log(updatePort);\n\n\n          _this.setState({\n            userPortfolio: updatePort\n          });\n\n          _this.totalPortfolio(); //console.log(price);\n\n        });\n      });\n    };\n\n    _this.totalPortfolio = function () {\n      var totalStockValue = 0;\n\n      _this.state.userPortfolio.forEach(function (el) {\n        totalStockValue += parseInt(el.Stockquantity) * parseFloat(el.latestPriceIEX);\n      });\n\n      _this.setState({\n        totalValue: totalStockValue\n      });\n\n      console.log(_this.state.totalValue);\n    };\n\n    return _this;\n  }\n\n  _createClass(QuickPortfolio, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      API.getPertucularUserWatchList().then(function (res) {\n        _this2.setState({\n          watchList: res.data\n        });\n      }).then(function () {\n        _this2.getUserPortfolio();\n      });\n    } //API AJAX Call to user transaction table and generate user portfolio updated new table to get profit loss \n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.state.userPortfolio.length === 0 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Portfolio will appear here.\") : React.createElement(\"table\", {\n        id: \"mytable\",\n        className: \"table table-striped\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"table-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Stock\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Quantity\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.state.userPortfolio.map(function (data) {\n        if (data.Stockquantity != 0) {\n          return React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, data.symbol.toUpperCase())), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, data.Stockquantity));\n        }\n      })))))); //Return Method end\n    } //Render Method End\n\n  }]);\n\n  return QuickPortfolio;\n}(Component); //Transaction class end \n\n\nexport { QuickPortfolio as default };","map":{"version":3,"sources":["/Users/swagg187/Desktop/crest group version/Crest/client/src/components/Portfolio/QuickPortfolio.js"],"names":["React","Component","API","Link","Router","Jumbotron","jsPDF","html2canvas","QuickPortfolio","state","watchList","portfolio","updatePortfolio","userPortfolio","totalValue","getUserPortfolio","getUserPortfolioData","UserId","then","res","console","log","data","setState","updatePort","updateWatchList","forEach","el","push","symbol","batchStock","k","i","length","toLowerCase","quote","latestPrice","totalPortfolio","totalStockValue","parseInt","Stockquantity","parseFloat","latestPriceIEX","getPertucularUserWatchList","map","toUpperCase"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport API from \"../../utils/API\";\nimport {Link, Router} from \"react-router-dom\";\nimport Jumbotron from \"../Jumbotron/index\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\nimport 'jspdf-autotable';\n\nexport default class QuickPortfolio extends Component {\n    state = {\n        watchList: {},\n        portfolio: [],\n        updatePortfolio:[],\n        userPortfolio:[],\n        totalValue:0\n    }\n    \n    componentDidMount() {\n        API.getPertucularUserWatchList().then((res) => {\n            this.setState({ watchList: res.data });\n        }).then(() => {\n            this.getUserPortfolio();\n        });\n    }\n \n    //API AJAX Call to user transaction table and generate user portfolio updated new table to get profit loss \n    getUserPortfolio = () => {\n        API.getUserPortfolioData(this.state.watchList.UserId).then((res) => {\n            console.log(res.data);\n            //this.setState({portfolio: res.data})\n            this.setState({ updatePortfolio: res.data })\n            const updatePort = res.data;\n            const updateWatchList = [];\n            this.state.updatePortfolio.forEach(function (el) {\n                updateWatchList.push(el.symbol)\n                //return updateWatchList\n            })\n\n            //const userWatchlist = this.state.updatePortfolio[this.state.updatePortfolio.length-1].symbols.join(\",\");\n            //console.log(updateWatchlist.join(\",\"));\n            API.batchStock(updateWatchList).then((res) => {\n                //console.log(this.state.updatePortfolio);\n                //   console.log(res.data);\n                for (let k in res.data) {\n                    //        console.log(k, res.data[k].quote.latestPrice);\n                    for (let i = 0; i < updatePort.length; i++) {\n                        if (k.toLowerCase() === updatePort[i].symbol) {\n                            updatePort[i][\"latestPriceIEX\"] = res.data[k].quote.latestPrice;\n                        }\n                    }\n               }\n            //   console.log(updatePort);\n                 this.setState({userPortfolio: updatePort})\n                 this.totalPortfolio();\n             //console.log(price);\n\n            })\n        })\n    }\n\n    totalPortfolio = () => {\n         let totalStockValue = 0;\n        this.state.userPortfolio.forEach(function(el){\n            totalStockValue +=(parseInt(el.Stockquantity)*parseFloat(el.latestPriceIEX));\n        })\n        this.setState({totalValue:totalStockValue});\n        console.log(this.state.totalValue);\n    }\n\n    render (){\n\n        return (\n          <div className=\"container\">\n             <div className=\"row\">\n               <div className=\"col-md-12\">\n               {(this.state.userPortfolio).length === 0 ? (<div>Portfolio will appear here.</div>) : (\n                <table id=\"mytable\" className=\"table table-striped\">\n                 <thead className=\"table-dark\">\n                     <tr>\n                         <th scope=\"col\">Stock</th>\n                         <th scope=\"col\">Quantity</th>\n                     </tr>\n                 </thead>\n                 <tbody>\n                     {this.state.userPortfolio.map((data) => {\n                         if (data.Stockquantity != 0) {\n                            return (\n                            <tr>\n                            <td><b>{data.symbol.toUpperCase()}</b></td>\n                            <td>{data.Stockquantity}</td>\n                            </tr>)\n                         }\n                     })}\n                 </tbody>\n                </table>\n                )}\n                \n               </div> \n             </div>\n            </div>\n    \n        ) //Return Method end\n      } //Render Method End\n    } //Transaction class end "]},"metadata":{},"sourceType":"module"}